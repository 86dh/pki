name: IPA Tests

on: [push, pull_request]

jobs:
  # docs/development/Building_PKI.md
  build:
    name: Building PKI
    runs-on: ubuntu-latest
    container: registry.fedoraproject.org/fedora:${{ matrix.os }}
    strategy:
      matrix:
        os: ['32']
    steps:
      - name: Install git
        run: dnf install -y git

      - name: Clone the repository
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          dnf install -y dnf-plugins-core rpm-build docker
          dnf copr enable -y @pki/10.9
          dnf builddep -y --allowerasing --spec ./pki.spec --nogpgcheck

      - name: Build PKI packages
        run: ./build.sh --with-pkgs=base,server,ca,kra --with-timestamp --with-commit-id --work-dir=build rpm

      - name: Upload PKI packages
        uses: actions/upload-artifact@v2
        with:
          name: pki-build-${{ matrix.os }}
          path: build/RPMS/

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build container with systemd
        uses: docker/build-push-action@v2
        with:
          file: ci/Dockerfile
          build-args: OS_VERSION=${{ matrix.os }}
          tags: ipa:latest
          outputs: type=docker,dest=/tmp/ipa.tar

      - name: Upload container
        uses: actions/upload-artifact@v2
        with:
          name: ipa-${{ matrix.os }}
          path: /tmp/ipa.tar

  ipa-test:
    name: Testing IPA
    needs: build
    runs-on: ubuntu-latest
    env:
      BUILDDIR: /tmp/workdir
      PKIDIR: /tmp/workdir/pki
      LOGS: ${GITHUB_WORKSPACE}/logs.txt
      COPR_REPO: "@pki/10.9"
      test_set: "test_caacl_plugin.py test_caacl_profile_enforcement.py test_cert_plugin.py test_certprofile_plugin.py test_ca_plugin.py test_vault_plugin.py"
    strategy:
      matrix:
        os: ['32']
    steps:
      - name: Clone repository
        uses: actions/checkout@v2

      - name: Download PKI packages
        uses: actions/download-artifact@v2
        with:
          name: pki-build-${{ matrix.os }}
          path: build/RPMS

      - name: Download container
        uses: actions/download-artifact@v2
        with:
          name: ipa-${{ matrix.os }}
          path: /tmp

      - name: Load container
        run: docker load --input /tmp/ipa.tar

      - name: Create network
        run: docker network create example

      - name: Run IPA container
        run: |
          IMAGE=ipa \
          NAME=ipa \
          HOSTNAME=ipa.example.com \
          ci/runner-init.sh

      - name: Connect IPA container to network
        run: docker network connect example ipa --alias ipa.example.com --alias ipa-ca.example.com

      - name: Install dependencies in IPA container
        run: |
          docker exec ipa dnf install -y findutils dnf-plugins-core
          docker exec ipa dnf copr enable -y @freeipa/freeipa-4.8-nightly
          docker exec ipa dnf copr enable -y ${COPR_REPO}

      - name: Install IPA packages in IPA container
        run: docker exec ipa dnf install -y freeipa-server freeipa-server-dns freeipa-server-trust-ad python3-ipatests freeipa-healthcheck

      - name: Install PKI packages in IPA container
        run: docker exec ipa bash -c "dnf -y localinstall ${PKIDIR}/build/RPMS/*"

      - name: Install IPA server in IPA container
        run: |
          docker exec ipa sysctl net.ipv6.conf.lo.disable_ipv6=0
          docker exec ipa ipa-server-install \
            -U \
            --domain example.com \
            -r EXAMPLE.COM \
            -p Secret.123 \
            -a Secret.123 \
            --setup-kra \
            --no-host-dns
          docker exec ipa bash -c "echo Secret.123 | kinit admin"
          docker exec ipa ipa ping

      - name: Verify CA admin in IPA container
        run: |
          docker exec ipa pki-server cert-export ca_signing --cert-file ca_signing.crt
          docker exec ipa pki client-cert-import ca_signing --ca-cert ca_signing.crt
          docker exec ipa pki client-cert-import \
              --pkcs12 /root/ca-agent.p12 \
              --pkcs12-password Secret.123
          docker exec ipa pki -n ipa-ca-agent ca-user-show admin

      - name: Run client container
        run: |
          docker run \
              --detach \
              --name=client \
              --hostname=client.example.com \
              --privileged \
              ipa:latest \
              /usr/sbin/init

      - name: Connect client container to network
        run: docker network connect example client --alias client.example.com

      - name: Install dependencies in client container
        run: |
          docker exec client dnf install -y dnf-plugins-core
          docker exec client dnf copr enable -y @freeipa/freeipa-4.8-nightly
          docker exec client dnf install -y freeipa-client

      - name: Install IPA client in client container
        run: |
          docker exec client sysctl net.ipv6.conf.lo.disable_ipv6=0
          docker exec client ipa-client-install \
              -U \
              --server=ipa.example.com \
              --domain=example.com \
              --realm=EXAMPLE.COM \
              -p admin \
              -w Secret.123
          docker exec client bash -c "echo Secret.123 | kinit admin"
          docker exec client klist

      - name: Gather config files from IPA container
        if: always()
        run: docker exec ipa tar cvf ${PKIDIR}/ipa-conf.tar -C / etc/pki

      - name: Upload config files from IPA container
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: ipa-conf-${{ matrix.os }}
          path: ipa-conf.tar

      - name: Run IPA tests in IPA container
        run: docker exec ipa ${PKIDIR}/ci/ipa-test.sh

      - name: Remove IPA server from IPA container
        run: docker exec ipa ipa-server-install --uninstall -U

      - name: Gather log files from IPA container
        if: always()
        run: |
          docker exec ipa bash -c "journalctl -u pki-tomcatd@pki-tomcat > /var/log/pki/pki-journalctl.log"
          docker exec ipa bash -c "tar cvf ${PKIDIR}/ipa-logs.tar /var/log/ipa* /var/log/pki*"

      - name: Upload log files from IPA container
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: ipa-logs-${{ matrix.os }}
          path: ipa-logs.tar
